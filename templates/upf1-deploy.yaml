apiVersion: v1
kind: Service
metadata:
  name: upf1-open5gs
  labels:
    epc-mode: upf1
spec:
  selector:
    epc-mode: upf1
  ports:
    - protocol: UDP
      port: 8805
      targetPort: 8805    
---  
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: open5gs-upf1-deployment
  labels:
    epc-mode: upf1
spec:
  replicas: 1
  selector:
    matchLabels:
      epc-mode: upf1
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: '[  { "name": "testuserplane1" , "interface": "net1" } ]'
        linkerd.io/inject: disabled
      labels:
        epc-mode: upf1
    spec:   
      containers:
        - name: upf1
          securityContext:
            privileged: true
          image: "{{ .Values.open5gs.image.repository }}:{{ .Values.open5gs.image.tag }}"
          imagePullPolicy: {{ .Values.open5gs.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
          - ip tuntap add name ogstun mode tun;
            ip addr add 10.45.0.1/16 dev ogstun;
            sysctl -w net.ipv6.conf.all.disable_ipv6=1;
            ip link set ogstun up;
            sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward";
            iptables -t nat -A POSTROUTING -s 10.45.0.0/16 ! -o ogstun -j MASQUERADE;
            open5gs-upfd -c /open5gs/config-map/upf1.yaml;
          volumeMounts:
          - name: open5gs-upf1-config
            mountPath: /open5gs/config-map/upf1.yaml
            subPath: "upf1.yaml"
          - mountPath: /dev/net/tun
            name: dev-net-tun            
      volumes:
        - name: open5gs-upf1-config
          configMap:
            name: open5gs-upf1-config
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun
